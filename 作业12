package week12;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.PrintWriter;

public class Driver {

	public static void main(String[] args) {
		try {
			File f = new File("D:question.txt");
			FileReader fr = new FileReader(f);
			BufferedReader br = new BufferedReader(fr);

			File f1 = new File("Dï¼šanswer.txt");
			FileWriter fw = new FileWriter(f1, true);
			PrintWriter pw = new PrintWriter(fw);

			String info = "";
			String answer = "";

			while ((info = br.readLine()) != null) {

				answer = info + " = " + cal(info);
				System.out.println(answer);
				pw.println(answer);

			}
			pw.close();
			fw.close();

			br.close();
			br.close();

		} catch (Exception e) {
			e.printStackTrace();
		}

	}

	public static String cal(String str) {
		String result = "";
		int R = 0;
		String oper = str.substring(0, str.indexOf("("));

		if (oper.equals("doubleMe")) {
			String first = str.substring(str.indexOf("(") + 1, str.indexOf(")"));
			int firstNum = Integer.parseInt(first);
			R = firstNum * 2;
			result = String.valueOf(R);
		} else {
			String first = str.substring(str.indexOf("(") + 1, str.indexOf(","));
			String second = str.substring(str.indexOf(",") + 1, str.indexOf(")"));
			int firstNum = Integer.parseInt(first);
			int secondNum = Integer.parseInt(second);
			switch (oper) {
			case "add":
				R = firstNum + secondNum;
				break;
			case "sub":
				R = firstNum - secondNum;
				break;
			case "muti":
				R = firstNum * secondNum;
				break;
			case "div":
				R = firstNum / secondNum;
				break;
			case "max":
				R = firstNum > secondNum ? firstNum : secondNum;
				break;
			case "min":
				R = firstNum < secondNum ? firstNum : secondNum;
				break;
			}
		}
		result = String.valueOf(R);
		return result;
	}

}
